# Ensure we're in zsh or bash; exit if we're not!
[ -n "${ZSH_VERSION+x}${BASH_VERSION+x}" ] || exit 0

# Get the current operating system
_uname_out="$(uname -s)"
case "${_uname_out}" in
    Linux*)     OS=Linux;;
    Darwin*)    OS=macOS;;
    CYGWIN*)    OS=Cygwin;;
    MINGW*)     OS=MinGW;;
    *)          OS="UNKNOWN:${unameOut}"
esac
export OS
unset _uname_out

if [[ "$OS" == "macOS" ]]; then
	export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"${HOME}/Library/Preferences"}"
	export XDG_CACHE_HOME="${XDG_CACHE_HOME:-"${HOME}/Library/Caches"}"
	export XDG_DATA_HOME="${XDG_DATA_HOME:-"$HOME/Library"}"
else
	export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"${HOME}/.config"}"
	export XDG_CACHE_HOME="${XDG_CACHE_HOME:-"${HOME}/.cache"}"
	export XDG_DATA_HOME="${XDG_DATA_HOME:-"$HOME/.local/share"}"
fi

if [[ -x "$(command -v brew)" ]]; then
	USING_BREW=1
	# cache brew prefix, because brew is slow as shit
	BREW_PREFIX="$(brew --prefix)"

	# Add [brew]/sbin to PATH
	if [[ -d "${BREW_PREFIX}/sbin" ]] && [[ ":${PATH}:" != *":${BREW_PREFIX}/sbin:"* ]]; then
		export PATH="${BREW_PREFIX}/sbin:${PATH}"
	fi

	# Add [brew]/bin to PATH
	if [[ -d "${BREW_PREFIX}/bin" ]] && [[ ":${PATH}:" != *":${BREW_PREFIX}/bin:"* ]]; then
		export PATH="${BREW_PREFIX}/bin:${PATH}"
	fi
fi

export PNPM_HOME="${XDG_DATA_HOME}/pnpm"
if [[ -d "${PNPM_HOME}" ]]; then
	export PATH="${PNPM_HOME}:${PATH}"
fi

_cargo_home="${CARGO_HOME:-"${HOME}/.cargo"}"
# Initialize rustup environment, if we need to do so.
if [[ -f "${_cargo_home}/env" ]]; then
	source "${_cargo_home}/env"
fi

# Add /opt/homebrew/sbin to PATH
if [[ -d /opt/homebrew/sbin ]] && [[ ":${PATH}:" != *":/opt/homebrew/sbin:"* ]]; then
	export PATH="/opt/homebrew/sbin:${PATH}"
fi

# Add /opt/homebrew/bin to PATH
if [[ -d /opt/homebrew/bin ]] && [[ ":${PATH}:" != *":/opt/homebrew/bin:"* ]]; then
	export PATH="/opt/homebrew/bin:${PATH}"
fi

# Add /opt/bin to PATH
if [[ -d /opt/bin ]] && [[ ":${PATH}:" != *":/opt/bin:"* ]]; then
	export PATH="/opt/bin:${PATH}"
fi

# Add /opt/local/bin to PATH
if [[ -d /opt/local/bin ]] && [[ ":${PATH}:" != *":/opt/local/bin:"* ]]; then
	export PATH="/opt/local/bin:${PATH}"
fi

# Add /usr/local/bin to PATH
if [[ -d /usr/local/bin ]] && [[ ":${PATH}:" != *":/usr/local/bin:"* ]]; then
	export PATH="/usr/local/bin:${PATH}"
fi

# Add ~/.local/bin to PATH
if [[ -d "${HOME}/.local/bin" ]] && [[ ":${PATH}:" != *":${HOME}/.local/bin:"* ]]; then
	export PATH="${HOME}/.local/bin:${PATH}"
fi

_dotnet_root="${DOTNET_ROOT:-"${HOME}/.dotnet"}"
if [[ -d "${_dotnet_root}/tools" ]] && [[ ":${PATH}:" != *":${_dotnet_root}/tools:"* ]]; then
	export PATH="${_dotnet_root}/tools:${PATH}"
fi

if [[ -d "${_cargo_home}/bin" ]] && [[ ":${PATH}:" != *":${_cargo_home}/bin:"* ]]; then
	export PATH="${_cargo_home}/bin:${PATH}"
fi

unset _dotnet_root
unset _cargo_home

# Set up aliases for bat, if it's installed.
if [[ -x "$(command -v bat)" ]]; then
	alias bhelp='bat --plain --language=help'
	alias cat='bat --paging=never --style=plain'
	export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

if [[ -x "$(command -v eza)" ]]; then
	alias ls='eza --git --color=auto --icons=auto'
	alias ll='eza --git --color=auto --icons=auto --long --binary --all'
fi

# Alias chezmoi to chemzoi because I keep mispelling it
if [[ -x "$(command -v chezmoi)" ]]; then
	alias chemzoi='chezmoi'
fi

if [[ -x "$(command -v gedit)" ]]; then
	export EDITOR="$(which gedit)"
elif [[ -x "$(command -v nano)" ]]; then
	export EDITOR="$(which nano)"
fi

if [[ "${OS}" == "Linux" ]]; then
	if [[ -x "$(command -v wslview)" ]]; then
		export BROWSER="$(which wslview)"
	elif [[ -x "$(command -v xdg-open)" ]]; then
		export BROWSER="$(which xdg-open)"
	fi

	if [[ -n "${WSL_DISTRO_NAME}" ]]; then
		export TERM="ms-terminal"
	fi
elif [[ "${OS}" == "macOS" ]]; then
	export BROWSER="$(which open)"
fi

export LUCY_PROFILE_RAN=1
